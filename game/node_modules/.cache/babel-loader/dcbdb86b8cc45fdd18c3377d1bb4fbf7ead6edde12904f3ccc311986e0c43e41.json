{"ast":null,"code":"import { ADD_WIN, SUB_WIN, PLAYER_LIST_REQUEST, PLAYER_LIST_SUCCESS, PLAYER_LIST_FAIL, ADD_PLAYER_FAIL, ADD_PLAYER_SUCCESS, ADD_PLAYER_REQUEST, DELETE_PLAYER_REQUEST, DELETE_PLAYER_SUCCESS, DELETE_PLAYER_FAIL } from \"../constants/playerConstants\";\nconst initialState = {\n  loading: false,\n  players: [],\n  error: null\n};\n\n// Reducer function to handle adding and subtracting wins\nexport const winReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    players: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_WIN:\n      console.log('Add win:', action.payload);\n      return {\n        ...state,\n        players: state.players.map(player => player.id === action.payload.id ? action.payload : player)\n      };\n    case SUB_WIN:\n      console.log('Subtract win:', action.payload);\n      return {\n        ...state,\n        players: state.players.map(player => player.id === action.payload.id ? action.payload : player)\n      };\n    default:\n      return state;\n  }\n};\n\n// Reducer function to handle adding and subtracting wins\nexport const champReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case PLAYER_LIST_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case PLAYER_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        players: action.payload\n      };\n    case PLAYER_LIST_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Reducer function to handle loading player data\nexport const playerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loading: false,\n    error: null,\n    players: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case PLAYER_LIST_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case PLAYER_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        players: action.payload\n      };\n    case PLAYER_LIST_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const addNewPlayer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loading: false,\n    error: null,\n    players: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_PLAYER_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case ADD_PLAYER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        players: action.payload\n      };\n    case ADD_PLAYER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const deletePlayer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loading: false,\n    error: null,\n    players: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case DELETE_PLAYER_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case DELETE_PLAYER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        players: action.payload\n      };\n    case DELETE_PLAYER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// export const deletePlayer = (state= {loading: false, error: null, players: []}, action) => {\n//   switch (action.type) {\n//     case DELETE_PLAYER:\n//       return { ...state, players: action.payload}\n//     default:\n//       return state;\n//   }\n// }","map":{"version":3,"names":["ADD_WIN","SUB_WIN","PLAYER_LIST_REQUEST","PLAYER_LIST_SUCCESS","PLAYER_LIST_FAIL","ADD_PLAYER_FAIL","ADD_PLAYER_SUCCESS","ADD_PLAYER_REQUEST","DELETE_PLAYER_REQUEST","DELETE_PLAYER_SUCCESS","DELETE_PLAYER_FAIL","initialState","loading","players","error","winReducer","state","arguments","length","undefined","action","type","console","log","payload","map","player","id","champReducer","playerReducer","addNewPlayer","deletePlayer"],"sources":["/Users/taylorking/dev/projects/redux/game-night/game/src/reducers/playerReducer.js"],"sourcesContent":["import { ADD_WIN, SUB_WIN, PLAYER_LIST_REQUEST, PLAYER_LIST_SUCCESS, PLAYER_LIST_FAIL, ADD_PLAYER_FAIL, ADD_PLAYER_SUCCESS, ADD_PLAYER_REQUEST, DELETE_PLAYER_REQUEST, DELETE_PLAYER_SUCCESS, DELETE_PLAYER_FAIL } from \"../constants/playerConstants\";\n\nconst initialState = {\n  loading: false,\n  players: [],\n  error: null\n};\n\n// Reducer function to handle adding and subtracting wins\n  export const winReducer = (state = { players: [] }, action) => {\n    switch (action.type) {\n      case ADD_WIN:\n        console.log('Add win:', action.payload);\n        return {\n          ...state,\n          players: state.players.map(player =>\n            player.id === action.payload.id ? action.payload : player\n          )\n        };\n      case SUB_WIN:\n        console.log('Subtract win:', action.payload);\n        return {\n          ...state,\n          players: state.players.map(player =>\n            player.id === action.payload.id ? action.payload : player\n          )\n        };\n      default:\n        return state;\n    }\n  };\n\n  // Reducer function to handle adding and subtracting wins\n  export const champReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case PLAYER_LIST_REQUEST:\n        return { ...state, loading: true };\n      case PLAYER_LIST_SUCCESS:\n        return { ...state, loading: false, players: action.payload };\n      case PLAYER_LIST_FAIL:\n        return { ...state, loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n  \n  // Reducer function to handle loading player data\n  export const playerReducer = (\n    state = { loading: false, error: null, players: [] },\n    action\n  ) => {\n    switch (action.type) {\n      case PLAYER_LIST_REQUEST:\n        return { ...state, loading: true };\n      case PLAYER_LIST_SUCCESS:\n        return { ...state, loading: false, players: action.payload };\n      case PLAYER_LIST_FAIL:\n        return { ...state, loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n\n  export const addNewPlayer = (state = { loading: false, error: null, players: [] }, action) => {\n    switch (action.type) {\n      case ADD_PLAYER_REQUEST:\n        return { ...state, loading: true };\n      case ADD_PLAYER_SUCCESS:\n        return { ...state, loading: false, players: action.payload };\n      case ADD_PLAYER_FAIL:\n        return { ...state, loading: false, error: action.payload };\n      default:\n        return state;\n    } \n  }\n\n  export const deletePlayer = (state = { loading: false, error: null, players: [] }, action) => {\n    switch (action.type) {\n      case DELETE_PLAYER_REQUEST:\n        return { ...state, loading: true };\n      case DELETE_PLAYER_SUCCESS:\n        return { ...state, loading: false, players: action.payload };\n      case DELETE_PLAYER_FAIL:\n        return { ...state, loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  }\n\n\n  // export const deletePlayer = (state= {loading: false, error: null, players: []}, action) => {\n  //   switch (action.type) {\n  //     case DELETE_PLAYER:\n  //       return { ...state, players: action.payload}\n  //     default:\n  //       return state;\n  //   }\n  // }\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}