{"ast":null,"code":"import { ADD_WIN, SUB_WIN } from \"../constants/playerConstants\";\nexport const getPlayers = () => async dispatch => {\n  try {\n    dispatch({\n      type: PLAYER_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/players\");\n    dispatch({\n      type: PLAYER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PLAYER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const winAction = player => dispatch => {\n  dispatch({\n    type: ADD_WIN,\n    payload: {\n      name: player.name,\n      wins: ++player.wins,\n      champion: player.champion\n    }\n  });\n  dispatch({\n    type: SUB_WIN,\n    payload: {\n      name: player.name,\n      wins: --player.wins,\n      champion: player.champion\n    }\n  });\n};","map":{"version":3,"names":["ADD_WIN","SUB_WIN","getPlayers","dispatch","type","PLAYER_LIST_REQUEST","data","axios","get","PLAYER_LIST_SUCCESS","payload","error","PLAYER_LIST_FAIL","response","message","winAction","player","name","wins","champion"],"sources":["/Users/taylorking/dev/projects/redux/game-night/game/src/actions/playerActions.js"],"sourcesContent":["import { ADD_WIN, SUB_WIN,  } from \"../constants/playerConstants\";\n\n\n\nexport const getPlayers = () => async (dispatch) => {\n    try {\n        dispatch({ type: PLAYER_LIST_REQUEST });\n        const { data } = await axios.get(\"/api/players\");\n        dispatch({\n            type: PLAYER_LIST_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: PLAYER_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const winAction = (player) => (dispatch) => {\n    dispatch({\n        type: ADD_WIN,\n        payload: {\n            name: player.name,\n            wins: ++player.wins,\n            champion: player.champion,\n        },\n    });\n    dispatch({\n        type: SUB_WIN,\n        payload: {\n            name: player.name,\n            wins: --player.wins,\n            champion: player.champion,\n        },\n    });\n}\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,QAAU,8BAA8B;AAIjE,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAChD,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEC;IAAoB,CAAC,CAAC;IACvC,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,cAAc,CAAC;IAChDL,QAAQ,CAAC;MACLC,IAAI,EAAEK,mBAAmB;MACzBC,OAAO,EAAEJ;IACb,CAAC,CAAC;EACN,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZR,QAAQ,CAAC;MACLC,IAAI,EAAEQ,gBAAgB;MACtBF,OAAO,EACHC,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACE,QAAQ,CAACP,IAAI,CAACQ,OAAO,GACvCH,KAAK,CAACE,QAAQ,CAACP,IAAI,CAACQ,OAAO,GAC3BH,KAAK,CAACG;IACpB,CAAC,CAAC;EACN;AACJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAIC,MAAM,IAAMb,QAAQ,IAAK;EAC/CA,QAAQ,CAAC;IACLC,IAAI,EAAEJ,OAAO;IACbU,OAAO,EAAE;MACLO,IAAI,EAAED,MAAM,CAACC,IAAI;MACjBC,IAAI,EAAE,EAAEF,MAAM,CAACE,IAAI;MACnBC,QAAQ,EAAEH,MAAM,CAACG;IACrB;EACJ,CAAC,CAAC;EACFhB,QAAQ,CAAC;IACLC,IAAI,EAAEH,OAAO;IACbS,OAAO,EAAE;MACLO,IAAI,EAAED,MAAM,CAACC,IAAI;MACjBC,IAAI,EAAE,EAAEF,MAAM,CAACE,IAAI;MACnBC,QAAQ,EAAEH,MAAM,CAACG;IACrB;EACJ,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}