{"ast":null,"code":"import { ADD_WIN, SUB_WIN, PLAYER_LIST_REQUEST, PLAYER_LIST_SUCCESS, PLAYER_LIST_FAIL, ADD_PLAYER_FAIL, ADD_PLAYER_SUCCESS, ADD_PLAYER_REQUEST, DELETE_PLAYER_REQUEST, DELETE_PLAYER_SUCCESS, DELETE_PLAYER_FAIL, ADD_CHAMP_SUCCESS, SUB_CHAMP_SUCCESS, ADD_SCORE_SUCCESS, SUB_SCORE_SUCCESS, SCORE_RESET } from \"../constants/playerConstants\";\nconst initialState = {\n  loading: false,\n  players: [],\n  error: null\n};\n\n// Reducer function to handle loading player data\nexport const playerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loading: false,\n    error: null,\n    players: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case PLAYER_LIST_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case PLAYER_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        players: action.payload\n      };\n    case PLAYER_LIST_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const addNewPlayer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loading: false,\n    error: null,\n    players: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_PLAYER_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case ADD_PLAYER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        players: action.payload\n      };\n    case ADD_PLAYER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const deletePlayer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loading: false,\n    error: null,\n    players: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case DELETE_PLAYER_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case DELETE_PLAYER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        players: action.payload\n      };\n    case DELETE_PLAYER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Reducer function to handle adding and subtracting wins\nexport const winReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    players: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_WIN:\n      console.log('Add win:', action.payload);\n      return {\n        ...state,\n        players: state.players.map(player => player.id === action.payload.id ? action.payload : player)\n      };\n    case SUB_WIN:\n      console.log('Subtract win:', action.payload);\n      return {\n        ...state,\n        players: state.players.map(player => player.id === action.payload.id ? action.payload : player)\n      };\n    default:\n      return state;\n  }\n};\n\n// Reducer function to handle adding and subtracting wins\nexport const champReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    players: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_CHAMP_SUCCESS:\n      console.log('Add champ:', action.payload);\n      return {\n        ...state,\n        players: state.players.map(player => player.id === action.payload.id ? action.payload : player)\n      };\n    case SUB_CHAMP_SUCCESS:\n      console.log('Subtract champ:', action.payload);\n      return {\n        ...state,\n        players: state.players.map(player => player.id === action.payload.id ? action.payload : player)\n      };\n    default:\n      return state;\n  }\n};\n\n// Reducer function to handle adding and subtracting score\nexport const scoreReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    players: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_SCORE_SUCCESS:\n      console.log('Add score:', action.payload);\n      return {\n        ...state,\n        players: state.players.map(player => player.id === action.payload.id ? action.payload : player)\n      };\n    case SUB_SCORE_SUCCESS:\n      console.log('Subtract score:', action.payload);\n      return {\n        ...state,\n        players: state.players.map(player => player.id === action.payload.id ? action.payload : player)\n      };\n    case SCORE_RESET:\n      console.log('Reset score:', action.payload);\n      return {\n        ...state,\n        score: 0\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ADD_WIN","SUB_WIN","PLAYER_LIST_REQUEST","PLAYER_LIST_SUCCESS","PLAYER_LIST_FAIL","ADD_PLAYER_FAIL","ADD_PLAYER_SUCCESS","ADD_PLAYER_REQUEST","DELETE_PLAYER_REQUEST","DELETE_PLAYER_SUCCESS","DELETE_PLAYER_FAIL","ADD_CHAMP_SUCCESS","SUB_CHAMP_SUCCESS","ADD_SCORE_SUCCESS","SUB_SCORE_SUCCESS","SCORE_RESET","initialState","loading","players","error","playerReducer","state","arguments","length","undefined","action","type","payload","addNewPlayer","deletePlayer","winReducer","console","log","map","player","id","champReducer","scoreReducer","score"],"sources":["/Users/taylorking/dev/projects/redux/game-night/game/src/reducers/playerReducer.js"],"sourcesContent":["import { ADD_WIN, SUB_WIN, PLAYER_LIST_REQUEST, PLAYER_LIST_SUCCESS, PLAYER_LIST_FAIL, ADD_PLAYER_FAIL, ADD_PLAYER_SUCCESS, ADD_PLAYER_REQUEST, DELETE_PLAYER_REQUEST, DELETE_PLAYER_SUCCESS, DELETE_PLAYER_FAIL, ADD_CHAMP_SUCCESS,  SUB_CHAMP_SUCCESS, ADD_SCORE_SUCCESS, SUB_SCORE_SUCCESS, SCORE_RESET} from \"../constants/playerConstants\";\n\nconst initialState = {\n  loading: false,\n  players: [],\n  error: null\n};\n\n\n// Reducer function to handle loading player data\nexport const playerReducer = (\n  state = { loading: false, error: null, players: [] },\n  action\n) => {\n  switch (action.type) {\n    case PLAYER_LIST_REQUEST:\n      return { ...state, loading: true };\n    case PLAYER_LIST_SUCCESS:\n      return { ...state, loading: false, players: action.payload };\n    case PLAYER_LIST_FAIL:\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\n\n\nexport const addNewPlayer = (state = { loading: false, error: null, players: [] }, action) => {\n  switch (action.type) {\n    case ADD_PLAYER_REQUEST:\n      return { ...state, loading: true };\n    case ADD_PLAYER_SUCCESS:\n      return { ...state, loading: false, players: action.payload };\n    case ADD_PLAYER_FAIL:\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  } \n}\n\nexport const deletePlayer = (state = { loading: false, error: null, players: [] }, action) => {\n  switch (action.type) {\n    case DELETE_PLAYER_REQUEST:\n      return { ...state, loading: true };\n    case DELETE_PLAYER_SUCCESS:\n      return { ...state, loading: false, players: action.payload };\n    case DELETE_PLAYER_FAIL:\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n}\n\n\n// Reducer function to handle adding and subtracting wins\n  export const winReducer = (state = { players: [] }, action) => {\n    switch (action.type) {\n      case ADD_WIN:\n        console.log('Add win:', action.payload);\n        return {\n          ...state,\n          players: state.players.map(player =>\n            player.id === action.payload.id ? action.payload : player\n          )\n        };\n      case SUB_WIN:\n        console.log('Subtract win:', action.payload);\n        return {\n          ...state,\n          players: state.players.map(player =>\n            player.id === action.payload.id ? action.payload : player\n          )\n        };\n      default:\n        return state;\n    }\n  };\n\n  // Reducer function to handle adding and subtracting wins\n  export const champReducer = (state = { players: [] }, action) => {\n    switch (action.type) {\n      case ADD_CHAMP_SUCCESS:\n        console.log('Add champ:', action.payload);\n        return {\n          ...state,\n          players: state.players.map(player =>\n            player.id === action.payload.id ? action.payload : player\n          )\n        };\n      case SUB_CHAMP_SUCCESS:\n        console.log('Subtract champ:', action.payload);\n        return {\n          ...state,\n          players: state.players.map(player =>\n            player.id === action.payload.id ? action.payload : player\n          )\n        };\n      default:\n        return state;\n    }\n  };\n\n\n// Reducer function to handle adding and subtracting score\n  export const scoreReducer = (state = { players: [] }, action) => {\n    switch (action.type) {\n      case ADD_SCORE_SUCCESS:\n        console.log('Add score:', action.payload);\n        return {\n          ...state, \n          players: state.players.map(player => \n            player.id === action.payload.id ? action.payload : player\n            )\n    }\n    case SUB_SCORE_SUCCESS:\n      console.log('Subtract score:', action.payload);\n      return {\n        ...state,\n        players: state.players.map(player =>\n          player.id === action.payload.id ? action.payload : player\n        )\n      };\n    case SCORE_RESET:\n      console.log('Reset score:', action.payload);\n      return {\n        ...state,\n        score: 0,\n      };\n    default:\n      return state;\n  }\n};\n  \n  \n\n \n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}