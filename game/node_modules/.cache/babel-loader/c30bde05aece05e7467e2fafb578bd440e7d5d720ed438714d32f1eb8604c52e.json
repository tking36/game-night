{"ast":null,"code":"import { ADD_WIN, SUB_WIN, PLAYER_LIST_REQUEST, PLAYER_LIST_SUCCESS, PLAYER_LIST_FAIL, ADD_PLAYER_FAIL, ADD_PLAYER_REQUEST, ADD_PLAYER_SUCCESS, DELETE_PLAYER_FAIL, DELETE_PLAYER_SUCCESS, DELETE_PLAYER_REQUEST, ADD_CHAMP_SUCCESS, ADD_SCORE_FAIL, ADD_SCORE_REQUEST, ADD_SCORE_SUCCESS, SUB_SCORE_FAIL, SUB_SCORE_REQUEST, SUB_SCORE_SUCCESS, SCORE_RESET } from \"../constants/playerConstants\";\nimport axios from \"axios\";\n\n// GET PLAYERS\nexport const getPlayers = () => async dispatch => {\n  try {\n    dispatch({\n      type: PLAYER_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"http://localhost:8000/api/players\");\n    dispatch({\n      type: PLAYER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PLAYER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// ADD PLAYER\nexport const addPlayer = name => async dispatch => {\n  try {\n    dispatch({\n      type: ADD_PLAYER_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(\"http://localhost:8000/api/players\", {\n      name,\n      wins: 0,\n      champion: 0\n    });\n    dispatch({\n      type: ADD_PLAYER_SUCCESS,\n      payload: data\n    });\n    dispatch(getPlayers());\n  } catch (error) {\n    dispatch({\n      type: ADD_PLAYER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// DELETE PLAYER\n\nexport const deletePlayer = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_PLAYER_REQUEST\n    });\n    await axios.delete(`http://localhost:8000/api/players/${id}`);\n    dispatch({\n      type: DELETE_PLAYER_SUCCESS,\n      payload: id\n    });\n    dispatch(getPlayers());\n  } catch (error) {\n    dispatch({\n      type: DELETE_PLAYER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// ADD AND SUBTRACT WIN\nexport const addWin = player => async dispatch => {\n  try {\n    const updatedPlayer = {\n      ...player,\n      wins: player.wins + 1\n    };\n    const {\n      data\n    } = await axios.put(`http://localhost:8000/api/players/${player.id}`, updatedPlayer);\n    dispatch({\n      type: ADD_WIN,\n      payload: data\n    });\n    dispatch(getPlayers());\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const subWin = player => async dispatch => {\n  try {\n    const updatedPlayer = {\n      ...player,\n      wins: player.wins - 1\n    };\n    const {\n      data\n    } = await axios.put(`http://localhost:8000/api/players/${player.id}`, updatedPlayer);\n    dispatch({\n      type: SUB_WIN,\n      payload: data\n    });\n    dispatch(getPlayers());\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// ADD AND SUBTRACT CHAMPIONSHIP\nexport const addChamp = player => async dispatch => {\n  try {\n    const updatedPlayer = {\n      ...player,\n      champion: player.champion + 1\n    };\n    const {\n      data\n    } = await axios.put(`http://localhost:8000/api/players/${player.id}`, updatedPlayer);\n    dispatch({\n      type: ADD_CHAMP_SUCCESS,\n      payload: data\n    });\n    dispatch(getPlayers());\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const subChamp = player => async dispatch => {\n  try {\n    const updatedPlayer = {\n      ...player,\n      champion: player.champion - 1\n    };\n    const {\n      data\n    } = await axios.put(`http://localhost:8000/api/players/${player.id}`, updatedPlayer);\n    dispatch({\n      type: ADD_CHAMP_SUCCESS,\n      payload: data\n    });\n    dispatch(getPlayers());\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// ADD AND SUBTRACT SCORE\n\nexport const addScore = player => async dispatch => {\n  try {\n    const updatedPlayer = {\n      ...player,\n      score: player.score + 1\n    };\n    const {\n      data\n    } = await axios.put(`http://localhost:8000/api/players/${player.id}`, updatedPlayer);\n    dispatch({\n      type: ADD_SCORE_SUCCESS,\n      payload: data\n    });\n    dispatch(getPlayers());\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const subScore = player => async dispatch => {\n  try {\n    const updatedPlayer = {\n      ...player,\n      score: player.score - 1\n    };\n    const {\n      data\n    } = await axios.put(`http://localhost:8000/api/players/${player.id}`, updatedPlayer);\n    dispatch({\n      type: SUB_SCORE_SUCCESS,\n      payload: data\n    });\n    dispatch(getPlayers());\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const resetScores = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.put('http://localhost:8000/api/players', {\n      score: 0\n    });\n    dispatch({\n      type: RESET_SCORES_SUCCESS,\n      payload: data\n    });\n    dispatch(getPlayers());\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["ADD_WIN","SUB_WIN","PLAYER_LIST_REQUEST","PLAYER_LIST_SUCCESS","PLAYER_LIST_FAIL","ADD_PLAYER_FAIL","ADD_PLAYER_REQUEST","ADD_PLAYER_SUCCESS","DELETE_PLAYER_FAIL","DELETE_PLAYER_SUCCESS","DELETE_PLAYER_REQUEST","ADD_CHAMP_SUCCESS","ADD_SCORE_FAIL","ADD_SCORE_REQUEST","ADD_SCORE_SUCCESS","SUB_SCORE_FAIL","SUB_SCORE_REQUEST","SUB_SCORE_SUCCESS","SCORE_RESET","axios","getPlayers","dispatch","type","data","get","payload","error","response","message","addPlayer","name","post","wins","champion","deletePlayer","id","delete","addWin","player","updatedPlayer","put","console","log","subWin","addChamp","subChamp","addScore","score","subScore","resetScores","RESET_SCORES_SUCCESS"],"sources":["/Users/taylorking/dev/projects/redux/game-night/game/src/actions/playerActions.js"],"sourcesContent":["import { ADD_WIN, SUB_WIN, PLAYER_LIST_REQUEST, PLAYER_LIST_SUCCESS, PLAYER_LIST_FAIL, ADD_PLAYER_FAIL, ADD_PLAYER_REQUEST, ADD_PLAYER_SUCCESS, DELETE_PLAYER_FAIL, DELETE_PLAYER_SUCCESS, DELETE_PLAYER_REQUEST, ADD_CHAMP_SUCCESS, ADD_SCORE_FAIL, ADD_SCORE_REQUEST, ADD_SCORE_SUCCESS, SUB_SCORE_FAIL, SUB_SCORE_REQUEST, SUB_SCORE_SUCCESS, SCORE_RESET } from \"../constants/playerConstants\";\nimport axios from \"axios\";\n\n\n// GET PLAYERS\nexport const getPlayers = () => async (dispatch) => {\n    try {\n        dispatch({ type: PLAYER_LIST_REQUEST });\n        const { data } = await axios.get(\"http://localhost:8000/api/players\");\n        dispatch({\n            type: PLAYER_LIST_SUCCESS,\n            payload: data,\n        });\n        \n    } catch (error) {\n        dispatch({\n            type: PLAYER_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n// ADD PLAYER\nexport const addPlayer = (name) => async (dispatch) => {\n    try {\n        dispatch({ type: ADD_PLAYER_REQUEST });\n        const { data } = await axios.post(\"http://localhost:8000/api/players\", {name, wins: 0, champion: 0});\n        dispatch({\n            type: ADD_PLAYER_SUCCESS,\n            payload: data,\n        });\n        dispatch(getPlayers());\n    } catch (error) {\n        dispatch({\n            type: ADD_PLAYER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n// DELETE PLAYER\n\nexport const deletePlayer = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: DELETE_PLAYER_REQUEST });\n        await axios.delete(`http://localhost:8000/api/players/${id}`);\n        dispatch({\n            type: DELETE_PLAYER_SUCCESS,\n            payload: id,\n        });\n        dispatch(getPlayers());\n    } catch (error) {\n        dispatch({\n            type: DELETE_PLAYER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n\n\n// ADD AND SUBTRACT WIN\nexport const addWin = (player) => async (dispatch) => {\n    try {\n        const updatedPlayer = {...player,wins: player.wins + 1};\n        const {data} = await axios.put(`http://localhost:8000/api/players/${player.id}`, updatedPlayer);\n        dispatch({ type:ADD_WIN, payload: data });\n        dispatch(getPlayers());\n    } catch (error) {\n        console.log(error)\n    }\n    };\n\n    export const subWin = (player) => async (dispatch) => {\n        try {\n            const updatedPlayer = {...player, wins: player.wins - 1};\n            const {data} = await axios.put(`http://localhost:8000/api/players/${player.id}`, updatedPlayer);\n            dispatch({ type:SUB_WIN, payload: data });\n            dispatch(getPlayers());\n        } catch (error) {\n            console.log(error)\n        }\n        }\n\n    \n    \n    // ADD AND SUBTRACT CHAMPIONSHIP\n    export const addChamp = (player) => async (dispatch) => {\n        try {\n            const updatedPlayer = {...player, champion: player.champion + 1};\n            const {data} = await axios.put(`http://localhost:8000/api/players/${player.id}`, updatedPlayer);\n            dispatch({ type:ADD_CHAMP_SUCCESS, payload: data });\n            dispatch(getPlayers());\n        } catch (error) {\n            console.log(error)\n        }\n        }\n\n    export const subChamp = (player) => async (dispatch) => {\n        try {\n            const updatedPlayer = {...player, champion: player.champion - 1};\n            const {data} = await axios.put(`http://localhost:8000/api/players/${player.id}`, updatedPlayer);\n            dispatch({ type:ADD_CHAMP_SUCCESS, payload: data });\n            dispatch(getPlayers());\n        } catch (error) {\n            console.log(error)\n        }\n        }\n\n    // ADD AND SUBTRACT SCORE\n\n    export const addScore = (player) => async (dispatch) => {\n        try {\n            const updatedPlayer = {...player, score: player.score + 1};\n            const {data} = await axios.put(`http://localhost:8000/api/players/${player.id}`, updatedPlayer);\n            dispatch({ type:ADD_SCORE_SUCCESS, payload: data });\n            dispatch(getPlayers());\n        } catch (error) {\n            console.log(error)\n        }\n        }\n\n\n    export const subScore = (player) => async (dispatch) => {\n        try {\n            const updatedPlayer = {...player, score: player.score - 1};\n            const {data} = await axios.put(`http://localhost:8000/api/players/${player.id}`, updatedPlayer);\n            dispatch({ type:SUB_SCORE_SUCCESS, payload: data });\n            dispatch(getPlayers());\n        } catch (error) {\n            console.log(error)\n\n        }\n    }\n\n    export const resetScores = () => async (dispatch) => {\n        try {\n          const { data } = await axios.put('http://localhost:8000/api/players', { score: 0 });\n          dispatch({ type: RESET_SCORES_SUCCESS, payload: data });\n          dispatch(getPlayers());\n        } catch (error) {\n          console.log(error);\n        }\n      }\n      \n    \n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}